from manimlib import *

class impdep(Scene):
    def construct(self):
        self.wait(2)
        imp1 = Tex("p1 \\implies q1",font_size = 60, color = BLUE)
        imp1.move_to([-2,0,0])
        dep1 = Tex("p2 \\Leftrightarrow q2",font_size = 60, color = GREEN_SCREEN)
        dep1.move_to([2,0,0])
        self.play(Write(imp1), run_time = 2)
        self.play(Write(dep1), run_time = 2)
        self.wait(1)
        dep2 = Tex("p2 \\Leftrightarrow q2", font_size = 60, color = GREEN_SCREEN)
        dep2.move_to([0,2.5,0])
        self.play(FadeOut(imp1), Transform(dep1, dep2))
        p2 = Text("p2 : meu carro está quebrado", font_size = 30, t2c = {"p2" : GREEN_SCREEN})
        p2.move_to([0,1.5,0])
        self.play(Write(p2), run_time = 4)
        q2 = Text("q2 : eu vou consertá-lo", font_size = 30, t2c = {"q2" : GREEN_SCREEN})
        q2.move_to([0,1,0])
        self.play(Write(q2), run_time = 2)
        self.wait(2)
        bipq1 = Text("Se, e somente se meu carro estiver quebrado, ", font_size = 30,  t2c = {"Se, e somente se" : GREEN_SCREEN})
        bipq2 = Text("eu vou consertá-lo.", font_size = 30)
        bipq1.move_to([0,0,0])
        bipq2.move_to([0,-0.5,0])
        self.wait(4)
        self.play(Write(bipq1), run_time = 4)
        self.play(Write(bipq2), run_time = 4)
        self.wait(11)
        bipq1t1 = Text("Se, e somente se meu carro estiver quebrado, ", font_size = 30,  t2c = {"Se, e somente se" : GREEN_SCREEN, "meu carro estiver quebrado" : RED})
        bipq2t1 = Text("eu vou conserta-lo.", font_size = 30, t2c = {"eu vou consertá-lo" : BLUE})
        bipq2t1.move_to([0,-0.5,0])
        self.play(ReplacementTransform(bipq1, bipq1t1))
        self.wait(4)
        self.play(ReplacementTransform(bipq2, bipq2t1))
        self.wait(17)
        bipq1t2 = Text("Se, e somente se meu carro estiver quebrado, ", font_size = 30,  t2c = {"Se, e somente se" : GREEN_SCREEN, "meu carro estiver quebrado" : BLUE})
        bipq2t2 = Text("eu vou conserta-lo.", font_size = 30, t2c = {"eu vou consertá-lo" : RED})
        bipq2t2.move_to([0,-0.5,0])
        self.play(ReplacementTransform(bipq1t1, bipq1t2))
        self.play(ReplacementTransform(bipq2t1, bipq2t2))
        self.wait(2)
        self.wait(25)
        parte1 = VGroup(bipq1t2,bipq2t2)
        self.play(FadeOut(parte1), shift = DOWN)
        p2t1 = Text("p2 : meu carro está quebrado", font_size = 30, t2c = {"p2" : GREEN_SCREEN})
        p2t1.move_to([1,1.5,0])
        q2t1 = Text("q2 : eu vou consertá-lo", font_size = 30, t2c = {"q2" : GREEN_SCREEN})
        q2t1.move_to([1,1,0])
        table = r"""
        \begin{table}[]
        \centering
        \begin{tabular}{|l|l|l|}\hline
        T & F & n(p v q) \\\hline
        &  &    \\\hline
        &  &   \\\hline
        &  &      \\\hline    
        &  &      \\\hline
        \end{tabular}
        \end{table}
        """
        tex_table = TexText(table)
        tex_table. move_to([-4.5,0,0])
        p = Tex("p")
        q = Tex("q")
        pq = Tex("p \\Leftrightarrow q", color = GREEN_SCREEN)
        p.move_to([-6.2,1.2,0])
        q.move_to([-5.2,1.2,0])
        pq.move_to([-3.7,1.2,0])
        self.play(ReplacementTransform(p2, p2t1),ReplacementTransform(q2,q2t1), Write(tex_table), Write(p), Write(q), Write(pq))
        self.wait(4)
        pv1 = Tex("V", color= BLUE)
        pv2 = Tex("V", color= BLUE)
        pf1 = Tex("F", color= RED)
        pf2 = Tex("F", color= RED)
        #
        pv1.move_to([-6.2,0.6,0])
        pv2.move_to([-6.2,0,0])
        pf1.move_to([-6.2,-0.6,0])
        pf2.move_to([-6.2,-1.2,0])
        #
        qv1 = Tex("V", color= BLUE)
        qf1 = Tex("F", color= RED)
        qv2 = Tex("V", color= BLUE)
        qf2 = Tex("F", color= RED)
        #
        qv1.move_to([-5.2,0.6,0])
        qf1.move_to([-5.2,0,0])
        qv2.move_to([-5.2,-0.6,0])
        qf2.move_to([-5.2,-1.2,0])
        #
        pqv1 = Tex("V", color= BLUE)
        pqf1 = Tex("F", color= RED)
        pqf2 = Tex("F", color= RED)
        pqv2 = Tex("V", color= BLUE)
        #
        pqv1.move_to([-3.7,0.6,0])
        pqf1.move_to([-3.7,0,0])
        pqf2.move_to([-3.7,-0.6,0])
        pqv2.move_to([-3.7,-1.2,0])
        self.play(Write(pv2), run_time = 1)
        self.play(Write(qf1), run_time = 1)
        self.play(Write(pqf1), run_time = 3)
        self.wait(1.5)
        self.play(Write(pf1), run_time = 2)
        self.play(Write(qv2), run_time = 2)
        self.play(Write(pqf2), run_time = 3)
        self.wait(3)
        self.wait(5)
        bipq1t3 = Text("Se, e somente se meu carro estiver quebrado, ", font_size = 30,  t2c = {"Se, e somente se" : GREEN_SCREEN, "meu carro estiver quebrado" : BLUE})
        bipq2t3 = Text("eu vou conserta-lo.", font_size = 30, t2c = {"eu vou consertá-lo" : BLUE})
        bipq1t3.move_to([0,-2,0])
        bipq2t3.move_to([0,-2.5,0])
        self.play(Write(bipq1t3), run_time = 3)
        self.play(Write(bipq2t3),  run_time = 2)
        self.wait(6)
        self.wait(3)
        self.play(Write(pv1), Write(qv1), Write(pqv1), run_time = 6)
        self.wait(2)
        bipq1t4 = Text("Se, e somente se meu carro estiver quebrado, ", font_size = 30,  t2c = {"Se, e somente se" : GREEN_SCREEN, "meu carro estiver quebrado" : RED})
        bipq2t4 = Text("eu vou conserta-lo.", font_size = 30, t2c = {"eu vou consertá-lo" : RED})
        bipq1t4.move_to([0,-2,0])
        bipq2t4.move_to([0,-2.5,0])
        self.play(ReplacementTransform(bipq1t3, bipq1t4), ReplacementTransform(bipq2t3, bipq2t4))
        self.wait(6)
        self.wait(6)
        self.play(Write(pf2), Write(qf2), Write(pqv2))
        self.wait(4)